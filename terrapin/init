local bin_path = "/terrapin/programs"
local startup_log_path = "startup_log.txt"

local function log(string)
	local logfile = assert(fs.open(startup_log_path, "a"))
	logfile.write(string .. "\n")
	logfile.close()
end

function _make_aliases(path)
	-- print("making aliases for : ", path)
	local programs = fs.list(path)

	for _, program in ipairs(programs) do
		local full_name = fs.combine(path, program)
		if not fs.isDir(full_name) and string.find(program, ".lua$") then
			local alias = program:sub(1, -5)

			shell.setAlias(alias, full_name)
			shell.setAlias(alias:lower(), full_name)
			log("added alias : " .. alias .. " (" .. alias:lower() .. ") for : " .. full_name)
		end
	end
end


-- Disabled until I can test it more.
--	I need to make sure that level gets set correctly, that error terminates
-- correctly, ...
--
-- override 'error' for better reporting
--
-- local _old_error = error
-- function error (message , level)
-- 	local checkin = require 'checkin'

-- 	-- If the checkin module is loaded and active
-- 	if checkin and #checkin.task_stack > 1 then
-- 		checkin.checkin('ERROR : ' .. message)
-- 	end

-- 	_old_error(message, level)
-- end

-- Actual Startup Code Start

-- clear the previous log file :
local file = fs.open('/startup_log.txt', 'w')
if file then file.close() end

-- Remove the CraftOS messages
term.clear()
term.setCursorPos(0, 0)

-- load require API to allow ondemand loading of APIs
dofile("/terrapin/apis/require.lua")
log("Loaded require API\n")

-- Make aliases for all the programs
_make_aliases(bin_path)

-- try to do autoruns
log("\nStarting autorun ... \n")
if fs.exists("/autorun") and not fs.isDir("/autorun") then
	dofile("/autorun")
end

log("\nInitialisation completed\n")

-- Generate startup message with computer/turtle information
local computer_id, computer_label = os.getComputerID(), os.getComputerLabel()
local startup_msg = ""

if computer_label then
	startup_msg =
		"+\n" ..
		"| Running Terrapin API Collection v1.0\n" ..
		"| \n" ..
		"| Label : " .. os.getComputerLabel() .. " (Id: " .. os.getComputerID() .. ")\n"

	if turtle then
		startup_msg = startup_msg .. "| Fuel Level : " .. turtle.getFuelLevel() .. "\n"
	end
else
	startup_msg =
		"WARNING : This computer does not have a label. If you break it all " ..
		"files stored in this computer will be destroyed.\n\n## Computer ID: " ..
		computer_id .. '##\n'
end

log("Startup Complete")

print("\n" .. startup_msg .. "+\n")
